<Window x:Class="WpfMailSenderCore.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WpfMailSenderCore.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:local="clr-namespace:WpfMailSenderCore"
        xmlns:cmd="clr-namespace:WpfMailSenderCore.Infrastructure.Commands" 
        xmlns:views="clr-namespace:WpfMailSenderCore.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Title="{Binding Title}" Height="600" Width="800" WindowStartupLocation="CenterScreen" Icon="/Resources/Icons/Avatar.ico" ResizeMode="CanResizeWithGrip"
        DataContext="{Binding MainWindowVModel, Source={StaticResource Locator}}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <DockPanel.Resources>
            <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Right" Text="!" FontSize="20" FontWeight="Bold" Margin="1,0" 
                                           Padding="3,0" Foreground="Red" Background="Yellow" VerticalAlignment="Center"
                                           ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=ErrorVisualElement}"/>
                                <Border Padding="2" BorderBrush="Red" BorderThickness="3" CornerRadius="3">
                                    <AdornedElementPlaceholder Name="ErrorVisualElement"/>
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="Pink"/>
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Resources>
        <Menu DockPanel.Dock="Top" HorizontalAlignment="Left">
            <MenuItem Header="Файл">
                <MenuItem Header="Создать"/>
                <MenuItem Header="Открыть"/>
                <MenuItem Header="Сохранить"/>
                <Separator/>
                <MenuItem Header="Выход" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
                    <MenuItem.Command>
                        <cmd:CloseWindowCommand/>
                    </MenuItem.Command>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Сервис">
                <MenuItem Header="Параметры" IsEnabled="False"/>
                <Separator/>
                <MenuItem Header="Отправить сейчас" Command="{Binding SendMessageCommand}"/>
                <Separator/>
                <MenuItem Header="Загрузить данные" Command="{Binding LoadDataCommand}"/>
                <MenuItem Header="Сохранить данные" Command="{Binding SaveDataCommand}"/>
            </MenuItem>
            <MenuItem Header="Разработка">
                <MenuItem Header="Тест шифрования" Click="MenuItem_OnClick"/>
            </MenuItem>
            <MenuItem Header="Помощь">
                <MenuItem Header="Справка по программе" Command="{Binding Path=ShowDialogCommand}" CommandParameter
                          ="C# Уровень 3. Методичка 3. Разработка WPF-приложений c использованием шаблона MVVM на примере MVVM Light Toolkit. Приложение 'Рассыльщик электронной почты'. Выполнил: Рассахатский Андрей."/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Top" Background="LightGreen" Height="40">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Приложение - " FontSize="18"/>
                <TextBlock Text="{Binding Path=Title}" Height="30" FontSize="18" FontWeight="Bold"/>
            </StackPanel>
        </Grid>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="Статус приложения: Готов"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Время: "/>
                    <TextBlock Text="{Binding Path=CurrentTime, ConverterCulture=ru-RU, StringFormat=HH:mm:ss.ffff}" FontWeight="Bold"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <TabControl>
            <TabItem Header="Списки" MinHeight="30">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ToolBarTray Grid.Row="0" Grid.ColumnSpan="2">
                        <ToolBar Header="Сервера">
                            <ComboBox Name="ComboBoxServers"
                                      Width="160" SelectedIndex="0" Margin="34,0,0,0"
                                      ItemsSource="{Binding Path=Servers}" 
                                      SelectedItem="{Binding Path=SelectedServer}">
                                <ComboBox.ToolTip>
                                    <TextBlock>
                                         Адрес: <TextBlock Text="{Binding Path=SelectedServer.Address}"/>
                                         Порт: <TextBlock Text="{Binding Path=SelectedServer.Port}"/>
                                    </TextBlock>
                                </ComboBox.ToolTip>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.ToolTip>
                                                <TextBlock>
                                                    Адрес: <TextBlock Text="{Binding Address}"/>
                                                    Порт: <TextBlock Text="{Binding Port}"/>
                                                </TextBlock>
                                            </TextBlock.ToolTip>
                                            Сервер: <TextBlock Text="{Binding Name}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Button Name="ButtonAddServer" ToolTip="Добавить" 
                                    Command="{Binding Path=CreateServerCommand}" 
                                    CommandParameter="{Binding Path=SelectedServer}">
                                <fa:FontAwesome Icon="Solid_Plus" Foreground="Green" FontSize="22" Margin="-5,-5,-5,-5"/>
                            </Button>
                            <Button Name="ButtonEditServer" ToolTip="Редактировать"
                                    Command="{Binding Path=EditServerCommand}"
                                    CommandParameter="{Binding Path=SelectedServer}">
                                <fa:FontAwesome Icon="Solid_Edit" Foreground="Yellow" FontSize="22" Margin="-5,-5,-5,-5"/>
                            </Button>
                            <Button Name="ButtonDeleteServer" ToolTip="Удалить"
                                    Command="{Binding Path=DeleteServerCommand}"
                                    CommandParameter="{Binding Path=SelectedServer}">
                                <fa:FontAwesome Icon="Solid_Times" Foreground="Red" FontSize="22" Margin="-5,-5,-5,-5"/>
                            </Button>
                        </ToolBar>
                        <ToolBar Header="Отправители" Band="1">
                            <ComboBox Name="ComboBoxSenders" 
                                      Width="160" SelectedIndex="0" Margin="6,0,0,0"
                                      ItemsSource="{Binding Path=Senders}"
                                      SelectedItem="{Binding Path=SelectedSender}"
                                      ToolTip="{Binding Path=SelectedSender.Description}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock ToolTip="{Binding Description}">
                                            <TextBlock Text="{Binding Name}"/>
                                            <TextBlock Text="{Binding Address}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Button Name="ButtonAddSeder" ToolTip="Добавить"
                                    Command="{Binding Path=CreateSenderCommand}"
                                    CommandParameter="{Binding Path=SelectedSender}">
                                <fa:FontAwesome Icon="Solid_Plus" Foreground="Green" FontSize="22" Margin="-5,-5,-5,-5"/>
                            </Button>
                            <Button Name="ButtonEditSender" ToolTip="Редактировать"
                                    Command="{Binding Path=EditSenderCommand}"
                                    CommandParameter="{Binding Path=SelectedSender}">
                                <fa:FontAwesome Icon="Solid_Edit" Foreground="Yellow" FontSize="22" Margin="-5,-5,-5,-5"/>
                            </Button>
                            <Button Name="ButtonDeleteSender" ToolTip="Удалить"
                                    Command="{Binding Path=DeleteSenderComand}"
                                    CommandParameter="{Binding Path=SelectedSender}">
                                <fa:FontAwesome Icon="Solid_Times" Foreground="Red" FontSize="22" Margin="-5,-5,-5,-5"/>
                            </Button>
                        </ToolBar>
                        <ToolBar Header="Планировщик">
                            <Button Name="ButtonToPlan" ToolTip="Запланировать" Command="{Binding Path=ShowTabItemCommand}" CommandParameter="{Binding ElementName=TabItemPlan}">
                                <StackPanel Orientation="Horizontal">
                                    <fa:FontAwesome Icon="Solid_Clock" Foreground="Blue" FontSize="22" Margin="-5,-5,10,-5" />
                                    <TextBlock Text="Запланировать"/>
                                </StackPanel>
                            </Button>
                        </ToolBar>
                    </ToolBarTray>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <views:RecipientView Grid.Column="0"/>
                        <views:RecipientEditor Grid.Column="1"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Name="TabItemPlan" Header="Планировщик" MinHeight="30">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Column="0" Header="Планирование" Margin="0,0,3,0">
                        <StackPanel>
                            <TextBlock Text="Дата и время задания" HorizontalAlignment="Center"/>
                            <DatePicker materialDesign:HintAssist.Hint="Выберите дату" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Language="ru-RU"/>
                            <!--<Calendar Name="CalendarPlan" SelectedDate="2020-09-05" Language="ru-RU"/>-->
                            <materialDesign:TimePicker materialDesign:HintAssist.Hint="Выберите время"/>
                            <UniformGrid Columns="1" Margin="5">
                                <Button x:Name="ButtonSendPlan" Margin="0,0,0,4" Click="ButtonSendPlan_OnClick">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:FontAwesome Icon="Regular_Clock" Margin="0,0,5,0" Foreground="Aqua"/>
                                        <TextBlock>Запланировать</TextBlock>
                                    </StackPanel>
                                </Button>
                                <Button x:Name="ButtonSendNow" Command="{Binding Path=SendMessageCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:FontAwesome Icon="Solid_Share" Margin="0,0,5,0" Foreground="Violet"/>
                                        <TextBlock>Отправить сейчас</TextBlock>
                                    </StackPanel>
                                </Button>
                            </UniformGrid>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Header="Задания">
                        <ListBox>
                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                <Border BorderBrush="Green" BorderThickness="1" Padding="4" CornerRadius="4">
                                    <Grid>
                                        <StackPanel>
                                            <TextBlock Text="Дата: 01.12.2020 12:00"/>
                                            <TextBlock Text="Отправитель: Админ"/>
                                            <TextBlock Text="Получатель: Пользователь"/>
                                            <TextBlock Text="Тема письма: Тест"/>
                                        </StackPanel>
                                        <Button VerticalAlignment="Top" HorizontalAlignment="Right" Padding="10,0" ToolTip="Удалить" Content="x"/>
                                    </Grid>
                                </Border>
                            </ListBoxItem>
                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                <Border BorderBrush="Green" BorderThickness="1" Padding="4" CornerRadius="4">
                                    <Grid>
                                        <StackPanel>
                                            <TextBlock Text="Дата: 01.12.2020 12:00"/>
                                            <TextBlock Text="Отправитель: Админ"/>
                                            <TextBlock Text="Получатель: Пользователь"/>
                                            <TextBlock Text="Тема письма: Тест"/>
                                        </StackPanel>
                                        <Button VerticalAlignment="Top" HorizontalAlignment="Right" Padding="10,0" ToolTip="Удалить" Content="x"/>
                                    </Grid>
                                </Border>
                            </ListBoxItem>
                        </ListBox>
                    </GroupBox>
                    <GridSplitter Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="3"/>
                </Grid>
            </TabItem>
            <TabItem Header="Письма" MinHeight="30">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="150"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Header="Список писем">
                        <ListBox Name="ListBoxMessages" DisplayMemberPath="Title" SelectedIndex="0"
                                 ItemsSource="{Binding Path=Messages}" 
                                 SelectedItem="{Binding Path=SelectedMessage}">
                        </ListBox>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Grid.Row="0" Header="Заголовок письма">
                        <TextBox Text="{Binding SelectedItem.Title, ElementName=ListBoxMessages, ValidatesOnDataErrors=True}"/>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Grid.Row="1" Header="Текст письма">
                        <TextBox Name="TextBoxMailMessage" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap"
                                 Text="{Binding SelectedItem.Body, ElementName=ListBoxMessages, ValidatesOnDataErrors=True}"/>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Статистика" MinHeight="30">
                <Border Margin="5" Padding="5" BorderThickness="2" BorderBrush="LightGreen" CornerRadius="10">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="0,5,0,0"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Style.Triggers>
                                    <Trigger Property="Grid.Column" Value="0">
                                        <Setter Property="FontStyle" Value="Italic"/>
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="Margin" Value="0,5,5,0"/>
                                    </Trigger>
                                    <Trigger Property="Grid.Column" Value="1">
                                        <Setter Property="FontWeight" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Отправлено писем: "/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=StatisticViewModel.SendMessagesCount, StringFormat={}{0} шт.}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Всего отправителей: "/>
                        <TextBlock Grid.Column="1" Grid.Row="1" Text="0 шт."/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Всего получателей: "/>
                        <TextBlock Grid.Column="1" Grid.Row="2" Text="0 шт."/>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
